/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package framepackage;

import iti.chat.client.connections.ConnctionHndlr;
import iti.chat.entites.Category;
import iti.chat.entites.ChatGroup;
import iti.chat.entites.Client;
import iti.chat.faces.ClientStates;
import java.awt.Component;
import java.awt.Frame;
import java.awt.Rectangle;
import java.awt.Toolkit;
import java.awt.event.MouseEvent;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JTree;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeCellRenderer;
import javax.swing.tree.DefaultTreeModel;

/**
 *
 * @author user
 */
public class clientmainview extends javax.swing.JFrame {

    Client c;
    ConnctionHndlr controller;
    HashMap<DefaultMutableTreeNode, Object> treeMap;
    HashMap<Integer, Client> chatMember;

//<editor-fold defaultstate="collapsed" desc="icos">
    public Icon online = new ImageIcon(getClass().getResource("/ClientGUI/Images/online-icon.png"));
    public Icon off = new ImageIcon(getClass().getResource("/ClientGUI/Images/offline-icon.png"));
    public Icon outside = new ImageIcon(getClass().getResource("/ClientGUI/Images/rightback-icon.png"));
    public Icon busy = new ImageIcon(getClass().getResource("/ClientGUI/Images/busy-girl-icon.png"));
    public Icon work = new ImageIcon(getClass().getResource("/ClientGUI/Images/lunchbreak-girl-icon.png"));
//</editor-fold>

    public clientmainview(Client client, ConnctionHndlr hndlr) {
        initComponents();
        c = client;
        lblIcon.setText(c.getUserName());
        treeMap = new HashMap<>();
        chatMember = new HashMap<>();
        DefaultTreeModel treeModel = new DefaultTreeModel(processHierarchy());
        jTree1.setCellRenderer(getCellRenderForTree());
        jTree1.setModel(treeModel);
        controller = hndlr;
        controller.setMainFrame(this);
//        //<editor-fold defaultstate="collapsed" desc="resize">
        setExtendedState(MAXIMIZED_VERT);
//        Toolkit tk = Toolkit.getDefaultToolkit();
//        int xSize = ((int) tk.getScreenSize().getWidth());
//        int ySize = ((int) tk.getScreenSize().getHeight());
//        setLocation(xSize / 2, 0);
//        setMaximizedBounds(new Rectangle(getLocation().x, getLocation().y, 280, ySize));
//        setSize(280, ySize);
//</editor-fold>
        repaint();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPopupMenu1 = new javax.swing.JPopupMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jTree1 = new javax.swing.JTree();
        jPanel1 = new javax.swing.JPanel();
        block_Button = new javax.swing.JToggleButton();
        add_friend_Buttom = new javax.swing.JButton();
        new_chat_group_Buttom = new javax.swing.JButton();
        lblIcon = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        Friends_Menu = new javax.swing.JMenu();
        add_friend_menuItem = new javax.swing.JMenuItem();
        block_Friend_MenuItem = new javax.swing.JMenuItem();
        send_Mail_MenuItem = new javax.swing.JMenuItem();
        settings_Menu = new javax.swing.JMenu();
        Create_Chat_Group_menuItem = new javax.swing.JMenuItem();
        my_availability_menuItem = new javax.swing.JMenu();
        available_MenuItem = new javax.swing.JMenuItem();
        busy_MenuItem = new javax.swing.JMenuItem();
        invisible_MenuItem = new javax.swing.JMenuItem();
        logout_Menu = new javax.swing.JMenu();
        Log_Out_MenuItem = new javax.swing.JMenuItem();

        jMenuItem1.setText("start Chat");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jPopupMenu1.add(jMenuItem1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setLocationByPlatform(true);
        setResizable(false);
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                formMouseClicked(evt);
            }
        });
        addWindowStateListener(new java.awt.event.WindowStateListener() {
            public void windowStateChanged(java.awt.event.WindowEvent evt) {
                formWindowStateChanged(evt);
            }
        });
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jTree1.setAutoscrolls(true);
        jTree1.setMaximumSize(null);
        jTree1.setMinimumSize(null);
        jTree1.setName(""); // NOI18N
        jTree1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jTree1MousePressed(evt);
            }
        });
        jTree1.addTreeSelectionListener(new javax.swing.event.TreeSelectionListener() {
            public void valueChanged(javax.swing.event.TreeSelectionEvent evt) {
                jTree1ValueChanged(evt);
            }
        });

        block_Button.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ClientGUI/Images/blocked offline.png"))); // NOI18N
        block_Button.setToolTipText("block friend");
        block_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                block_ButtonActionPerformed(evt);
            }
        });

        add_friend_Buttom.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ClientGUI/Images/add.png"))); // NOI18N
        add_friend_Buttom.setToolTipText("add friend");
        add_friend_Buttom.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        add_friend_Buttom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                add_friend_ButtomActionPerformed(evt);
            }
        });

        new_chat_group_Buttom.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ClientGUI/Images/27.png"))); // NOI18N
        new_chat_group_Buttom.setToolTipText("new chat");
        new_chat_group_Buttom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                new_chat_group_ButtomActionPerformed(evt);
            }
        });

        lblIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ClientGUI/Images/online-icon.png"))); // NOI18N
        lblIcon.setText("jLabel1");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(new_chat_group_Buttom, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(12, 12, 12)
                        .addComponent(add_friend_Buttom, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(block_Button, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(lblIcon, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblIcon, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(add_friend_Buttom)
                    .addComponent(new_chat_group_Buttom, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(block_Button, javax.swing.GroupLayout.Alignment.LEADING))
                .addContainerGap())
        );

        Friends_Menu.setText("Friends");

        add_friend_menuItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ClientGUI/Images/add.png"))); // NOI18N
        add_friend_menuItem.setText("Add Friend");
        add_friend_menuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                add_friend_menuItemActionPerformed(evt);
            }
        });
        Friends_Menu.add(add_friend_menuItem);

        block_Friend_MenuItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ClientGUI/Images/blocked offline.png"))); // NOI18N
        block_Friend_MenuItem.setText("Remove/Block Friend");
        block_Friend_MenuItem.setToolTipText("");
        block_Friend_MenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                block_Friend_MenuItemActionPerformed(evt);
            }
        });
        Friends_Menu.add(block_Friend_MenuItem);

        send_Mail_MenuItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ClientGUI/Images/22.png"))); // NOI18N
        send_Mail_MenuItem.setText("Send Mail");
        send_Mail_MenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                send_Mail_MenuItemActionPerformed(evt);
            }
        });
        Friends_Menu.add(send_Mail_MenuItem);

        jMenuBar1.add(Friends_Menu);

        settings_Menu.setText("chat");

        Create_Chat_Group_menuItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ClientGUI/Images/27.png"))); // NOI18N
        Create_Chat_Group_menuItem.setText("Create Chat Group");
        Create_Chat_Group_menuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Create_Chat_Group_menuItemActionPerformed(evt);
            }
        });
        settings_Menu.add(Create_Chat_Group_menuItem);

        jMenuBar1.add(settings_Menu);

        my_availability_menuItem.setText("status");
        my_availability_menuItem.setToolTipText("");

        available_MenuItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ClientGUI/Images/13.png"))); // NOI18N
        available_MenuItem.setText("available");
        available_MenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                available_MenuItemActionPerformed(evt);
            }
        });
        my_availability_menuItem.add(available_MenuItem);

        busy_MenuItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ClientGUI/Images/15.png"))); // NOI18N
        busy_MenuItem.setText("busy");
        busy_MenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                busy_MenuItemActionPerformed(evt);
            }
        });
        my_availability_menuItem.add(busy_MenuItem);

        invisible_MenuItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ClientGUI/Images/14.png"))); // NOI18N
        invisible_MenuItem.setText("invisible");
        invisible_MenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                invisible_MenuItemActionPerformed(evt);
            }
        });
        my_availability_menuItem.add(invisible_MenuItem);

        jMenuBar1.add(my_availability_menuItem);

        logout_Menu.setText("Log Out ");

        Log_Out_MenuItem.setText("Log Out");
        Log_Out_MenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Log_Out_MenuItemActionPerformed(evt);
            }
        });
        logout_Menu.add(Log_Out_MenuItem);

        jMenuBar1.add(logout_Menu);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jTree1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTree1, javax.swing.GroupLayout.DEFAULT_SIZE, 404, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void Create_Chat_Group_menuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Create_Chat_Group_menuItemActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Create_Chat_Group_menuItemActionPerformed

    private void busy_MenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_busy_MenuItemActionPerformed
        c.setStatus(ClientStates.busy);
        controller.changeStatus(c);
        lblIcon.setIcon(busy);
    }//GEN-LAST:event_busy_MenuItemActionPerformed

    private void invisible_MenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_invisible_MenuItemActionPerformed
        c.setStatus(ClientStates.inWork);
        controller.changeStatus(c);
        lblIcon.setIcon(outside);

    }//GEN-LAST:event_invisible_MenuItemActionPerformed

    private void add_friend_menuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_add_friend_menuItemActionPerformed
        AddFriendFram addFriend = new AddFriendFram(c);//my email
        addFriend.setVisible(true);
    }//GEN-LAST:event_add_friend_menuItemActionPerformed

    private void block_Friend_MenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_block_Friend_MenuItemActionPerformed
        RemoveFriendFrame removeFriend = new RemoveFriendFrame(c);
        removeFriend.setVisible(true);
    }//GEN-LAST:event_block_Friend_MenuItemActionPerformed

    private void send_Mail_MenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_send_Mail_MenuItemActionPerformed
        SendMailFrame sendMail = new SendMailFrame(c);
        sendMail.setVisible(true);
    }//GEN-LAST:event_send_Mail_MenuItemActionPerformed

    private void block_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_block_ButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_block_ButtonActionPerformed

    private void add_friend_ButtomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_add_friend_ButtomActionPerformed
        AddFriendFram addFriend = new AddFriendFram(c);//my email
        addFriend.setVisible(true);

    }//GEN-LAST:event_add_friend_ButtomActionPerformed

    private void new_chat_group_ButtomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_new_chat_group_ButtomActionPerformed
//        new ChatForm().setVisible(true);
    }//GEN-LAST:event_new_chat_group_ButtomActionPerformed

    private void available_MenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_available_MenuItemActionPerformed
        c.setStatus(ClientStates.online);
        controller.changeStatus(c);
        lblIcon.setIcon(online);

    }//GEN-LAST:event_available_MenuItemActionPerformed

    private void jTree1ValueChanged(javax.swing.event.TreeSelectionEvent evt) {//GEN-FIRST:event_jTree1ValueChanged
        System.out.println(evt.getNewLeadSelectionPath());
        Client selectNode = getSelectNode();
        if (selectNode != null) {
            System.out.println(selectNode.getClientId() + " : " + selectNode.getEmail());
        }
    }//GEN-LAST:event_jTree1ValueChanged

    private void jTree1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTree1MousePressed
        if (evt.getClickCount() == 2) {
            Client selectNode = getSelectNode();
            if (selectNode != null) {
                ChatGroup chatGroup = new ChatGroup();
                chatGroup.setClientList(new ArrayList<>());
                chatGroup.getClientList().add(c);
                chatGroup.getClientList().add(selectNode);
                chatGroup.setuAdmin(c);
                System.out.println(selectNode.getClientId() + " : " + selectNode.getEmail());
                controller.startChat(chatGroup);

            }

        }
    }//GEN-LAST:event_jTree1MousePressed

    private void formMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseClicked
        if (evt.getButton() == MouseEvent.BUTTON3) {
            int row = jTree1.getClosestRowForLocation(evt.getX(), evt.getY());
            jTree1.setSelectionRow(row);
            Object lastSelectedPathComponent = jTree1.getLastSelectedPathComponent();
            Object selectedNode = treeMap.get(lastSelectedPathComponent);
            if (selectedNode instanceof Client) {
                jPopupMenu1.show(evt.getComponent(), evt.getX(), evt.getY());
            }
        }
    }//GEN-LAST:event_formMouseClicked

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing

    }//GEN-LAST:event_formWindowClosing

    private void formWindowStateChanged(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowStateChanged

//        if ((evt.getNewState() & Frame.ICONIFIED) == Frame.ICONIFIED) {
//            System.out.println("minmize");
//            Toolkit tk = Toolkit.getDefaultToolkit();
////        int xSize = ((int) tk.getScreenSize().getWidth());
//            int ySize = ((int) tk.getScreenSize().getHeight());
//            setSize(250, ySize / 2);
//        } // maximized
//        else 
//        Toolkit tk = Toolkit.getDefaultToolkit();
////        int xSize = ((int) tk.getScreenSize().getWidth());
//        int ySize = ((int) tk.getScreenSize().getHeight());
//
//        if ((evt.getNewState() & Frame.MAXIMIZED_BOTH) == Frame.MAXIMIZED_BOTH) {
//            System.out.println("maxmize");
//            setMaximizedBounds(new Rectangle(getLocation().x, getLocation().y, 280, ySize));
//            repaint();
//
////            setSize(250, ySize);
//        } else if ((evt.getNewState() & Frame.NORMAL) == Frame.NORMAL) {
//            setMaximizedBounds(new Rectangle(getLocation().x, getLocation().y, 280, ySize / 2));
//        }

    }//GEN-LAST:event_formWindowStateChanged

    private void Log_Out_MenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Log_Out_MenuItemActionPerformed
        controller.logout();
        this.dispose();
        new LoginFrame().setVisible(true);
    }//GEN-LAST:event_Log_Out_MenuItemActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(clientmainview.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(clientmainview.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(clientmainview.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(clientmainview.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
//                new clientmainview().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem Create_Chat_Group_menuItem;
    private javax.swing.JMenu Friends_Menu;
    private javax.swing.JMenuItem Log_Out_MenuItem;
    private javax.swing.JButton add_friend_Buttom;
    private javax.swing.JMenuItem add_friend_menuItem;
    private javax.swing.JMenuItem available_MenuItem;
    private javax.swing.JToggleButton block_Button;
    private javax.swing.JMenuItem block_Friend_MenuItem;
    private javax.swing.JMenuItem busy_MenuItem;
    private javax.swing.JMenuItem invisible_MenuItem;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JTree jTree1;
    private javax.swing.JLabel lblIcon;
    private javax.swing.JMenu logout_Menu;
    private javax.swing.JMenu my_availability_menuItem;
    private javax.swing.JButton new_chat_group_Buttom;
    private javax.swing.JMenuItem send_Mail_MenuItem;
    private javax.swing.JMenu settings_Menu;
    // End of variables declaration//GEN-END:variables

    public DefaultMutableTreeNode processHierarchy() {
        DefaultMutableTreeNode frindList = new DefaultMutableTreeNode("freinds list");
        DefaultMutableTreeNode cat, frnds;

        List<Category> categorys = this.c.getCategoryList();
        for (Category category : categorys) {
            cat = new DefaultMutableTreeNode(category.getCatName());
            frindList.add(cat);
            treeMap.put(cat, category);

            List<Client> clientList = category.getClientList();
            if (clientList.isEmpty()) {
                frnds = new DefaultMutableTreeNode();
                treeMap.put(frnds, "");

            } else {
                for (Client client : clientList) {
                    frnds = new DefaultMutableTreeNode(client);
                    cat.add(frnds);
                    treeMap.put(frnds, client);
                    chatMember.put(client.getClientId(), client);

                }
            }
        }

        return (frindList);
    }

    Client getSelectNode() {
        Object lastSelectedPathComponent = jTree1.getLastSelectedPathComponent();
        Object selectedNode = treeMap.get(lastSelectedPathComponent);
        if (selectedNode instanceof Client) {
            return (Client) selectedNode;
        }
        return null;
    }

    DefaultTreeCellRenderer getCellRenderForTree() {
        DefaultTreeCellRenderer defaultTreeCellRenderer = new DefaultTreeCellRenderer() {

            @Override
            public Component getTreeCellRendererComponent(JTree tree, Object value, boolean sel, boolean expanded, boolean leaf, int row, boolean hasFocus) {

                System.out.println("sssss");

                if (value instanceof DefaultMutableTreeNode) {

                    DefaultMutableTreeNode x = (DefaultMutableTreeNode) value;
                    if (x.getUserObject() != null && x.getUserObject() instanceof Client) {

                        Client userObject = (Client) x.getUserObject();
                        value = userObject.getUserName();

                        switch (userObject.getStatus()) {
                            case ClientStates.online:
                                setLeafIcon(online);
                                break;
                            case ClientStates.offline:
                                setLeafIcon(off);
                                break;
                            case ClientStates.inWork:
                                setLeafIcon(work);
                                break;
                            case ClientStates.busy:
                                setLeafIcon(busy);
                                break;
                            case ClientStates.out:
                                setLeafIcon(outside);
                                break;
                        }
                    } else {
                        setLeafIcon(closedIcon);
                    }

                } else {
                }
                return super.getTreeCellRendererComponent(tree, value, sel, expanded, leaf, row, hasFocus);
            }

        };

        return defaultTreeCellRenderer;
    }

    public void updateFrndStates(Integer clientID, Integer status) {
        if (chatMember.get(clientID) != null) {
            chatMember.get(clientID).setStatus(status);
            jTree1.repaint();
        }

    }

}
