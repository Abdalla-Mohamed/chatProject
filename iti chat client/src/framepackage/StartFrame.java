/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package framepackage;

import java.awt.Cursor;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;

/**
 *
 * @author 7amouda
 */
public class StartFrame extends javax.swing.JFrame {

    public static String serverIP;
    public static int clientPort;

    /**
     * Creates new form StartFrame
     */
    public StartFrame() {
        initComponents();
        this.setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        txtIPAddress = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtPortNo = new javax.swing.JTextField();
        btnCancel = new javax.swing.JButton();
        btnConnect = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setText("URL Address :");

        txtIPAddress.setText("Server IP");
        txtIPAddress.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtIPAddressFocusGained(evt);
            }
        });
        txtIPAddress.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIPAddressActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setText("Port Number :");

        txtPortNo.setText("Port");

        btnCancel.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnCancel.setText("Cancel");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        btnConnect.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnConnect.setText("Connect");
        btnConnect.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnConnectMouseEntered(evt);
            }
        });
        btnConnect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConnectActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(txtPortNo)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(113, 113, 113)
                            .addComponent(btnCancel)))
                    .addComponent(txtIPAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(79, 79, 79))
            .addGroup(layout.createSequentialGroup()
                .addGap(73, 73, 73)
                .addComponent(btnConnect)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(79, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtIPAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtPortNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCancel)
                    .addComponent(btnConnect))
                .addGap(25, 25, 25))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnConnectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConnectActionPerformed
        // TODO add your handling code here:

        String ipAddress = txtIPAddress.getText().trim();
        String portNo = txtPortNo.getText().trim();
        if (validateIPAddress(ipAddress) && validatePortNo(portNo)) {
            this.dispose();
            new clientloginframe().setVisible(true);
        }


    }//GEN-LAST:event_btnConnectActionPerformed

    private void btnConnectMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnConnectMouseEntered
        btnConnect.setCursor(new Cursor(Cursor.HAND_CURSOR));
    }//GEN-LAST:event_btnConnectMouseEntered

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnCancelActionPerformed

    private void txtIPAddressActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIPAddressActionPerformed
        txtIPAddress.setText("");
    }//GEN-LAST:event_txtIPAddressActionPerformed

    private void txtIPAddressFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtIPAddressFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_txtIPAddressFocusGained

    private boolean validateIPAddress(String ipAddress) {
        String regex = "^([01]?\\d\\d?|2[0-4]\\d|25[0-5])\\."
                + "([01]?\\d\\d?|2[0-4]\\d|25[0-5])\\."
                + "([01]?\\d\\d?|2[0-4]\\d|25[0-5])\\."
                + "([01]?\\d\\d?|2[0-4]\\d|25[0-5])$";
        boolean validIP = false;
        if (!(ipAddress.equals(""))) {
            if (ipAddress.equalsIgnoreCase("localhost")) {
                serverIP = ipAddress.toLowerCase();
                validIP = true;
            } else if (Pattern.matches(regex, ipAddress)) {
                serverIP = ipAddress;
                validIP = true;
            } else {
                JOptionPane.showMessageDialog(rootPane, "Invalid IP Address !!!", "Invalid URL", JOptionPane.ERROR_MESSAGE);
                validIP = false;
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Please Enter an IP Address !!!", "Invalid URL", JOptionPane.ERROR_MESSAGE);
        
        }
        return validIP;
    }
   

    
private boolean validatePortNo(String portNo) {
        String regex = "(\\d){1,9}";
        boolean validPort = false;
        int port;
        if (!(portNo.equals("2009")) && !(portNo.equals("587"))) {
            if (!(portNo.equals(""))) {
                if (Pattern.matches(regex, portNo)) {
                    port = Integer.parseInt(portNo);
                    clientPort = port;
                    validPort = true;
                } else {
                    JOptionPane.showMessageDialog(rootPane, "Invalid Port Number !!!", "Invalid Port", JOptionPane.ERROR_MESSAGE);
                    validPort = false;
                    
                }
            } else {
                JOptionPane.showMessageDialog(rootPane, "Pleas Enter a Port Number !!!", "Invalid Port", JOptionPane.ERROR_MESSAGE);
                validPort = false;
            }
        }else{
            JOptionPane.showMessageDialog(rootPane, "This Port is Reserved for the Server, Try another Port No.","Invalid Port.",JOptionPane.ERROR_MESSAGE);
        }

        return validPort;
    }
    /**
     * @param args the command line arguments
     */
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnConnect;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JTextField txtIPAddress;
    private javax.swing.JTextField txtPortNo;
    // End of variables declaration//GEN-END:variables
    public static void main(String[] args) {
        new StartFrame();
    }
}
